// <auto-generated />
using System;
using Labrasa.API.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labrasa.API.Migrations
{
    [DbContext(typeof(LabrasaContext))]
    [Migration("20220309044113_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Labrasa.API.Domain.Models.Comanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataHoraAbertura")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraFechamento")
                        .HasColumnType("datetime");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("MesaId")
                        .HasColumnType("int");

                    b.Property<string>("StatusComanda")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric(38,2)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("MesaId");

                    b.ToTable("tb_comandas", (string)null);
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("tb_funcionarios", (string)null);
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ComandasAbertas")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("comandas_abertas");

                    b.Property<string>("ComandasFechadas")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("comandas_fechadas");

                    b.Property<string>("NumeroMesa")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("numero_mesa");

                    b.HasKey("Id");

                    b.ToTable("tb_mesas", (string)null);
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComandaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraPedido")
                        .HasColumnType("date")
                        .HasColumnName("data_pedido");

                    b.Property<decimal>("ValorPedido")
                        .HasColumnType("money")
                        .HasColumnName("valor_pedido");

                    b.HasKey("Id");

                    b.HasIndex("ComandaId");

                    b.ToTable("tb_pedidos", (string)null);
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Categoria")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("categoria");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("produtos");

                    b.Property<decimal>("PrecoCusto")
                        .HasColumnType("numeric(38,2)")
                        .HasColumnName("preco_custo");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("numeric(38,2)")
                        .HasColumnName("preco_venda");

                    b.Property<decimal>("QuantidadeEstoque")
                        .HasColumnType("numeric")
                        .HasColumnName("quantidade_estoque");

                    b.Property<decimal>("QuantidadeMinima")
                        .HasColumnType("numeric")
                        .HasColumnName("quantidade_minima");

                    b.HasKey("Id");

                    b.ToTable("tb_produtos", (string)null);
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.ProdutoPedido", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("produto_id");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("pedido_id");

                    b.HasKey("ProdutoId", "PedidoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("tb_produto_pedido", (string)null);
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Comanda", b =>
                {
                    b.HasOne("Labrasa.API.Domain.Models.Funcionario", "Funcionario")
                        .WithMany("Comandas")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labrasa.API.Domain.Models.Mesa", "Mesa")
                        .WithMany("Comandas")
                        .HasForeignKey("MesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Pedido", b =>
                {
                    b.HasOne("Labrasa.API.Domain.Models.Comanda", "Comanda")
                        .WithMany("PedidosComanda")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comanda");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.ProdutoPedido", b =>
                {
                    b.HasOne("Labrasa.API.Domain.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labrasa.API.Domain.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Comanda", b =>
                {
                    b.Navigation("PedidosComanda");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Funcionario", b =>
                {
                    b.Navigation("Comandas");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Mesa", b =>
                {
                    b.Navigation("Comandas");
                });
#pragma warning restore 612, 618
        }
    }
}

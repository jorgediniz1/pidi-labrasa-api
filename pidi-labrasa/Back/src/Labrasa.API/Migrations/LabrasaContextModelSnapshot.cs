// <auto-generated />
using System;
using Labrasa.API.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labrasa.API.Migrations
{
    [DbContext(typeof(LabrasaContext))]
    partial class LabrasaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Labrasa.API.Domain.Models.Comanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataHoraAbertura")
                        .HasColumnType("datetime2");

                    b.Property<double>("DataHoraFechamento")
                        .HasColumnType("float");

                    b.Property<int>("MesaId")
                        .HasColumnType("int");

                    b.Property<bool>("StatusComanda")
                        .HasColumnType("bit");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MesaId");

                    b.ToTable("Comandas");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComandasAbertas")
                        .HasColumnType("int");

                    b.Property<int>("ComandasFechadas")
                        .HasColumnType("int");

                    b.Property<int>("NumeroMesa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComandaPedidoId")
                        .HasColumnType("int");

                    b.Property<double>("ValorPedido")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ComandaPedidoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<double>("PrecoCusto")
                        .HasColumnType("float");

                    b.Property<double>("PrecoVenda")
                        .HasColumnType("float");

                    b.Property<int>("QuantidadeAdicionar")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeMinima")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Comanda", b =>
                {
                    b.HasOne("Labrasa.API.Domain.Models.Mesa", "Mesa")
                        .WithMany("ComandaMesa")
                        .HasForeignKey("MesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Pedido", b =>
                {
                    b.HasOne("Labrasa.API.Domain.Models.Comanda", "ComandaPedido")
                        .WithMany("PedidosComanda")
                        .HasForeignKey("ComandaPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComandaPedido");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Produto", b =>
                {
                    b.HasOne("Labrasa.API.Domain.Models.Pedido", null)
                        .WithMany("Produtos")
                        .HasForeignKey("PedidoId");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Comanda", b =>
                {
                    b.Navigation("PedidosComanda");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Mesa", b =>
                {
                    b.Navigation("ComandaMesa");
                });

            modelBuilder.Entity("Labrasa.API.Domain.Models.Pedido", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
